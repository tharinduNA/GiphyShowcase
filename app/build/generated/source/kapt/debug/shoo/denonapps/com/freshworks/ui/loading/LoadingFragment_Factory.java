// Generated by Dagger (https://dagger.dev).
package shoo.denonapps.com.freshworks.ui.loading;

import dagger.android.DispatchingAndroidInjector;
import dagger.android.support.DaggerDialogFragment_MembersInjector;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import javax.inject.Provider;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class LoadingFragment_Factory implements Factory<LoadingFragment> {
  private final Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider;

  public LoadingFragment_Factory(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider) {
    this.androidInjectorProvider = androidInjectorProvider;
  }

  @Override
  public LoadingFragment get() {
    LoadingFragment instance = newInstance();
    DaggerDialogFragment_MembersInjector.injectAndroidInjector(instance, androidInjectorProvider.get());
    return instance;
  }

  public static LoadingFragment_Factory create(
      Provider<DispatchingAndroidInjector<Object>> androidInjectorProvider) {
    return new LoadingFragment_Factory(androidInjectorProvider);
  }

  public static LoadingFragment newInstance() {
    return new LoadingFragment();
  }
}
