// Generated by Dagger (https://dagger.dev).
package shoo.denonapps.com.freshworks.di.module;

import android.app.Application;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import javax.inject.Provider;
import shoo.denonapps.com.freshworks.database.AppDatabase;

@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes"
})
public final class DBModule_ProvidesAppDatabaseFactory implements Factory<AppDatabase> {
  private final DBModule module;

  private final Provider<Application> applicationProvider;

  public DBModule_ProvidesAppDatabaseFactory(DBModule module,
      Provider<Application> applicationProvider) {
    this.module = module;
    this.applicationProvider = applicationProvider;
  }

  @Override
  public AppDatabase get() {
    return providesAppDatabase(module, applicationProvider.get());
  }

  public static DBModule_ProvidesAppDatabaseFactory create(DBModule module,
      Provider<Application> applicationProvider) {
    return new DBModule_ProvidesAppDatabaseFactory(module, applicationProvider);
  }

  public static AppDatabase providesAppDatabase(DBModule instance, Application application) {
    return Preconditions.checkNotNullFromProvides(instance.providesAppDatabase(application));
  }
}
